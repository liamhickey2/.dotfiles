# Local/private config goes in the include
[include]
	path = ~/.gitconfig.local
[hub]
	protocol = https
[color]
	diff = auto
	status = auto
	branch = auto
	ui = true
[core]
	editor = vim
	autocrlf= input
	excludesfile = ~/.gitignore
	preloadIndex = true
[push]
	default = current
[pull]
	rebase = true
[merge]
	tool = vimdiff
	ff	 = false
[user]
	signingkey = 64D43E1799DC8377
[commit]
	gpgsign = true
[gpg]
	program = gpg
[alias]
	c = commit
	ca = commit -a
	cm	 = commit -m
	cam	 = commit -am
	a	 = add
	aa	 = add .
	co	 = checkout
	coa	 = checkout -- .
	br	 = branch
	d	 = diff
	ds	 = diff --stat
	dc	 = diff --cached
	dw	 = diff --ignore-space-at-eol -b -w --ignore-blank-lines
	dcw	 = diff --cached --ignore-space-at-eol -b -w --ignore-blank-lines
	f	 = fetch
	fo	 = fetch origin
	com	 = checkout master
	pom	 = pull origin master
	st	 = status -sb
	undo = reset HEAD~1 --mixed
	amend = commit --amend
	untrack = rm --cache --
	unstage = reset HEAD
	sha	 = rev-parse --short HEAD
	lg	 = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
	wc	 = whatchanged --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
	pc	 = push -u origin `git rev-parse --abbrev-ref HEAD`
	count = !git shortlog -sn
	new	 = !sh -c 'git log $1@{1}..$1@{0} "$@"'
	aliases = !git config --get-regexp 'alias.*' | colrm 1 6 | sed 's/[ ]/ = /'
	bclean = "!_() { git branch --merged ${1-master} | grep -v " ${1-master}$" | xargs -r git branch -d; };_"
	squash = "!_() { git reset --soft HEAD~${1} && git commit --edit -m\"$(git log --format=%B --reverse HEAD..HEAD@{1})\"; };_"
	anw	 = "!_() { git diff -U0 -w --no-color "$@" | git apply --cached --ignore-whitespace --unidiff-zero -; };_"
	alias = "!sh -c '[ $# = 2 ] && git config --global alias.\"$1\" \"$2\" && exit 0 || echo \"usage: git alias <new alias> <original command>\" >&2 && exit 1' -"
	save = commit -am "WIP: SAVING"
	fp = !git fetch --all && git pull
	pnc = push -o ci.skip
        pfnc = push -f -o ci.skip
        umr    = !git checkout master && git fetch --all && git submodule update --init && git pull && git co - && git rebase master
        umrp   = !git checkout master && git fetch --all && git submodule update --init && git pull && git co - && git rebase master && git push -f
        umrpnc = !git checkout master && git fetch --all && git submodule update --init && git pull && git co - && git rebase master && git push -f -o ci.skip
        get-release-commits = !git log master ${1}..HEAD -E --grep='x\..{2}\..{2}'
        get-first-release-version = !git log master ${1}..HEAD --format=%B -E --grep='x\..{2}\..{2}' --reverse | head -n 1
        su = submodule update
        sui = submodule update --init
