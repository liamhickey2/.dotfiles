" Maintainer: Liam Hickey <liam.hickey@bell.net>
" Last change:	2024 May 7
" Based on Bram Moolenaar's example vimrc

" When started as "evim", evim.vim will already have done these settings.
if v:progname =~? "evim"
  finish
endif

""""""" UI """""""""

set wildmenu 	" Better command-line-completion
set number  	" show line numbers
set relativenumber  " other than the current line, the line number is relative to the current one
set ruler	" show the cursor position all the time
set showcmd	" display incomplete commands
set lazyredraw  " redraw only when we need to
set showmatch   " highlight matching [{()}]
set autoread	" autoread outside changes
set encoding=utf8
set mouse=a  " enable mouse
set visualbell  " Remove bell sound
set hlsearch " highlight all occurences of a search

" Switch syntax highlighting on, when the terminal has colors
" Also switch on highlighting the last used search pattern.
if &t_Co > 2 || has("gui_running")
  syntax on
  set hlsearch
  try
    colorscheme badwolf
  catch
  endtry
endif

""""""" Indentation/Spacing """""""""

" automatically try to set the filetype, and load an indent file, plugin file
filetype plugin indent on

" autoindent when creating constructs in C
set autoindent
set cindent

" Indentation settings for tabs (displayed with a width of 4 spaces).
set shiftwidth=4
set tabstop=4
set noexpandtab

" Use Vim settings, rather than Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible

" allow backspacing over everything in insert mode
set backspace=indent,eol,start

""""""""" Backups """"""""""""

" Hard overrite files, do not save a .swp/.*~ on file overrite
set noswapfile
set nobackup
set nowritebackup

"""""""""" Plugins/Packages """""""""""""

" Use gdb in vim
packadd termdebug
let g:termdebugger='arm-none-eabi-gdb'
let g:termdebug_wide=1
set mouse=a

" Install vim-plug
let data_dir = has('nvim') ? stdpath('data') . '/site' : '~/.vim'
if empty(glob(data_dir . '/autoload/plug.vim'))
  silent execute '!curl -fLo '.data_dir.'/autoload/plug.vim --create-dirs  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin()
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
call plug#end()

" Center the fzf menu
let g:fzf_layout = { 'up': '~50%' }

"""""""""" Aliases """""""""""""

" :W sudo saves the file 
" (useful for handling the permission-denied error)
command W w !sudo tee % > /dev/null

" Map ctrl+o for fzf :Files command
nnoremap <C-o> :Files<Cr>

" Map space to ripgrep
map <space> :Rg<CR>

